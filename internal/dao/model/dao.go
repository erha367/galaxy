// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"context"
	"galaxy/internal/svc"
	"time"
)

const TableNameNotice = "notice"

// Notice mapped from table <notice>
type Notice struct {
	ID          int64     `gorm:"column:id;primaryKey;autoIncrement:true;comment:唯一标识" json:"id"`     // 唯一标识
	Device      string    `gorm:"column:device;not null;comment:ios/android/all/j5/pc" json:"device"` // ios/android/all/j5/pc
	Channel     string    `gorm:"column:channel;not null;comment:渠道名称" json:"channel"`                // 渠道名称
	Title       string    `gorm:"column:title;not null;comment:名称" json:"title"`                      // 名称
	Content     string    `gorm:"column:content;not null;comment:内容" json:"content"`                  // 内容
	Link        string    `gorm:"column:link" json:"link"`
	NoticeID    int32     `gorm:"column:notice_id;not null;comment:notice id" json:"notice_id"`                   // notice id
	Description string    `gorm:"column:description;not null;comment:描述" json:"description"`                      // 描述
	Number      int32     `gorm:"column:number;not null;comment:排序,数越大越靠前" json:"number"`                         // 排序,数越大越靠前
	CreatedOn   time.Time `gorm:"column:created_on;not null;comment:记录创建时间" json:"created_on"`                    // 记录创建时间
	ModifiedOn  time.Time `gorm:"column:modified_on;default:CURRENT_TIMESTAMP;comment:记录修改时间" json:"modified_on"` // 记录修改时间
}

// TableName Notice's table name
func (*Notice) TableName() string {
	return TableNameNotice
}

func GetAllNotice(ctx context.Context,svCtx *svc.ServiceContext)([]Notice,error){
	var res []Notice
	err := svCtx.DB.WithContext(ctx).Where("id > ?",0).Find(&res).Error
	return res, err
}